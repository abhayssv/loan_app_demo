(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{"/mq6":function(e,r){e.exports='<header class="section-header">\r\n  <div class="tbl">\r\n    <div class="tbl-row">\r\n      <div class="tbl-cell">\r\n        <h3>Users</h3>\r\n        <ol class="breadcrumb breadcrumb-simple">\r\n          <li><a [routerLink]="[\'/\']">Home</a></li>\r\n          <li class="active">Users</li>\r\n        </ol>\r\n        <div class="add-button pull-right">\r\n          <a [routerLink]="[\'/users/add/\']" class="btn btn-inline btn-primary btn-sm" title="Add">Add User</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</header>\r\n<section class="box-typical box-typical-padding">\r\n  <h5>Search & Filter</h5>\r\n  <form name="form" (ngSubmit)="search(f.value)" #f="ngForm" novalidate>\r\n    <div class="row">\r\n      <div class="col-md-3">\r\n        <label for="name">Name</label>\r\n        <input type="text" class="form-control" name="name" [(ngModel)]="searchUsers.name" #name="ngModel">\r\n      </div>  \r\n      <div class="col-md-3">\r\n        <label for="email">Email</label>\r\n        <input type="text" class="form-control" name="email" [(ngModel)]="searchUsers.email" #email="ngModel">\r\n      </div>   \r\n      <div class="col-md-3">\r\n        <label for="mobile_no">Mobile No</label>\r\n        <input type="text" class="form-control" name="mobile_no" [(ngModel)]="searchUsers.mobile_no" #mobile_no="ngModel">\r\n      </div> \r\n      <div class="col-md-3">\r\n        <label for="user_type">User Type</label>\r\n        <select class="form-control" name="user_type" [(ngModel)]="searchUsers.user_type" #user_type="ngModel" required>\r\n          <option disabled>select-type</option>\r\n          <option *ngFor="let user of userCategory" [value]="user.user_type">{{user.category}}</option>\r\n        </select>\r\n      </div>\r\n    </div><br>\r\n    <div class="row"> \r\n      <div class="col-md-3">\r\n        <label for="user_role">User Role</label>\r\n        <select class="form-control" name="user_role" [(ngModel)]="searchUsers.user_role" #user_role="ngModel" required>\r\n          <option disabled>select-type</option>\r\n          <option *ngFor="let user of userSubCategory" [value]="user.id">{{user.name}}</option>\r\n        </select>\r\n      </div> \r\n      <div class="col-md-3">\r\n        <label for="user_status">User Status</label>\r\n        <select class="form-control" name="user_status" [(ngModel)]="searchUsers.user_status" #user_status="ngModel" required>\r\n          <option disabled>select-type</option>\r\n          <option *ngFor="let status of userStatus" [value]="status.id">{{status.name}}</option>\r\n        </select>\r\n      </div>  \r\n    </div>\r\n    <div class="row m-t-1">\r\n      <div class="col-md-2 search-button">\r\n        <button class="btn btn-primary"><i class="fa fa-search"></i> Search</button>\r\n      </div> \r\n      <div class="col-md-2 search-button">\r\n        <span (click)="reset()" class="btn btn-warning" title="Reset Filter">Reset Filter</span> \r\n      </div> \r\n    </div>\r\n  </form>\r\n</section>\r\n\x3c!-- Main Content --\x3e\r\n<section class="box-typical box-typical-padding">\r\n  <table id="lisusers" class="display table table-bordered" cellspacing="0" width="100%">\r\n    <thead>\r\n      <tr> \r\n        \x3c!-- <th>Id</th> --\x3e\r\n        <th>Firstname</th>\r\n        <th>Lastname</th>\r\n        <th>Email</th>\r\n        <th>Mobile No</th> \r\n        <th>Role</th>\r\n        <th>Contact Show<br>(Yes/No)</th>\r\n        <th>Active<br>(Yes/No)</th>\r\n        <th>Action</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor="let user of users" [attr.id]="user.id">\r\n        \x3c!-- <td>\r\n          {{ user.id }}\r\n        </td> --\x3e\r\n        <td>\r\n          {{ user.firstname }}\r\n        </td>\r\n        <td>\r\n          {{ user.lastname }}\r\n        </td>\r\n        <td>\r\n          {{ user.email }}\r\n        </td>\r\n        <td>\r\n          {{ user.mobile_no }}\r\n        </td>\r\n        <td>\r\n          {{ user.adminSubCategory.name }}\r\n        </td>\r\n        <td class="text-center">\r\n          <div class="checkbox-toggle">\r\n            <input type="checkbox" id="check-toggle-{{ user.id }}-contact_per" [(ngModel)]="user.contact_per"\r\n              onclick="return confirm(\'Are you sure, you want to change contact list for this user ?\');"\r\n              (change)="changeContactList(user,\'contact_per\')">\r\n            <label for="check-toggle-{{ user.id }}-contact_per"></label>\r\n          </div>\r\n        </td>\r\n        <td class="text-center">\r\n          <div class="checkbox-toggle">\r\n            <input type="checkbox" id="check-toggle-{{ user.id }}-active" [(ngModel)]="user.active"\r\n              onclick="return confirm(\'Are you sure, you want to change active of this user ?\');"\r\n              (change)="changeStatus(user,\'active\')">\r\n            <label for="check-toggle-{{ user.id }}-active"></label>\r\n          </div>\r\n        </td>\r\n\r\n        <td class="text-center">\r\n          <a [routerLink]="[\'/users/view/\' + user.id]" class="btn btn-inline btn-primary btn-sm" title="View Customer Detail"><i class="fa fa-search"></i></a>\r\n                \r\n          <a [routerLink]="[\'/users/edit/\' + user.id]" class="btn btn-inline btn-primary btn-sm" title="Edit"><i class="fa fa-pencil"></i></a>\r\n           \r\n          <span class="btn btn-inline btn-danger btn-sm" title="Delete Customer" (click)="deleteUser(user.id)"><i class="fa fa-trash"></i></span>\r\n            \r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</section>'},"1NfT":function(e,r){e.exports='<header class="section-header">\r\n    <div class="tbl">\r\n        <div class="tbl-row">\r\n            <div class="tbl-cell">\r\n                <h3>Users</h3>\r\n                <ol class="breadcrumb breadcrumb-simple">\r\n                    <li><a [routerLink]="[\'/\']">Home</a></li>\r\n                    <li><a [routerLink]="[\'/users\']">Users</a></li>\r\n                    <li class="active">Add</li>\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</header>\r\n\x3c!-- Main content --\x3e\r\n<section class="box-typical box-typical-padding">\r\n    <form name="form" (ngSubmit)="f.form.valid && save(f.value)" #f="ngForm" novalidate>\r\n        <div class="row m-t-3">\r\n            <div class="col-sm-12">\r\n                <div class="row">\r\n                    <div class="col-md-6">\r\n                        <div class="form-group" [ngClass]="{ \'has-error\': f.submitted && !firstname.valid}">\r\n                            <label for="firstname" class="required semibold form-label">FirstName</label>\r\n                            <input type="text" class="form-control" name="firstname" [(ngModel)]="user.firstname" #firstname="ngModel" required>\r\n                            <div *ngIf="f.submitted && !firstname.valid" class="help-block">FirstName is required</div>\r\n                        </div>\r\n                    </div> \r\n                    <div class="col-md-6">\r\n                        <div class="form-group" [ngClass]="{ \'has-error\': f.submitted && !lastname.valid}">\r\n                            <label for="lastname" class="required semibold form-label">LastName</label>\r\n                            <input type="text" class="form-control" name="lastname" [(ngModel)]="user.lastname" #lastname="ngModel" required>\r\n                            <div *ngIf="f.submitted && !lastname.valid" class="help-block">LastName is required</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="row">\r\n                    <div class="col-md-6">\r\n                        <div class="form-group" [ngClass]="{ \'has-error\': f.submitted && !email.valid}">\r\n                            <label for="email" class="required semibold form-label">Email</label>\r\n                            <input type="text" class="form-control" name="email" [(ngModel)]="user.email" #email="ngModel" required>\r\n                            <div *ngIf="f.submitted && !email.valid" class="help-block">Email is required</div>\r\n                        </div>\r\n                    </div> \r\n                    <div class="col-md-6">\r\n                        <div class="form-group" [ngClass]="{\'has-error\': f.submitted && !password.valid}">\r\n                            <label for="password" class="required semibold form-label">Password</label>\r\n                            <input type="password" class="form-control" name="password" [(ngModel)]="user.password" #password="ngModel" required>\r\n                            <div *ngIf="f.submitted && !password.valid" class="help-block">Password is required</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="row">\r\n                    <div class="col-md-6">\r\n                        <div class="form-group" [ngClass]="{\'has-error\': f.submitted && !profile_image.valid}">\r\n                            <label for="profile_image" class="required semibold form-label">Profile Image</label>\r\n                            <input type="file" class="form-control" name="profile_image" [(ngModel)]="user.profile_image" #profile_image="ngModel" (change)="selectImage($event)" required>\r\n                            <div *ngIf="f.submitted && !profile_image.valid" class="help-block">Upload an Image</div>\r\n                        </div>\r\n                    </div> \r\n                    <div class="col-md-6">\r\n                        <div class="form-group" [ngClass]="{\'has-error\': f.submitted && !mobile_no.valid}">\r\n                            <label for="mobile_no" class="required semibold form-label">Mobile</label>\r\n                            <input type="text" class="form-control" name="mobile_no" [(ngModel)]="user.mobile_no" #mobile_no="ngModel" required>\r\n                            <div *ngIf="f.submitted && !mobile_no.valid" class="help-block">Please Enter a Mobile Number</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="row">\r\n                    \x3c!-- <div class="col-md-6">\r\n                        <div class="form-group">\r\n                            <div class="checkbox-toggle">\r\n                                <label for="is_admin" class="semibold form-label">Is admin</label>\r\n                                <input type="checkbox" id="check-toggle-admin" name="is_admin" [(ngModel)]="user.is_admin">\r\n                                <label for="check-toggle-admin"></label>\r\n                            </div>\r\n                        </div>\r\n                    </div> --\x3e\r\n                    <div class="col-md-6">\r\n                        <div class="form-group">\r\n                            <div class="checkbox-toggle">\r\n                                <label for="active" class="semibold form-label">Active</label>\r\n                                <input type="checkbox" id="check-toggle-active" name="active" [(ngModel)]="user.active">\r\n                                <label for="check-toggle-active"></label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="row">\r\n                    <div class="col-md-6">\r\n                        <div class="form-group" [ngClass]="{\'has-error\': f.submitted && !user_type.valid}"> \r\n                            <label for="active" class="required semibold form-label">Category</label>\r\n                            <select class="form-control" name="user_type" [(ngModel)]="user.user_type" #user_type="ngModel" required (change)="onChangeCategory($event.target.value)">\r\n                                <option disabled [ngValue]="null">Select-Category</option>\r\n                                <option *ngFor="let user_category of userCategory" [ngValue]="user_category.user_type">{{user_category.category}}</option>\r\n                            </select>\r\n                            <div *ngIf="f.submitted && !user_type.valid" class="help-block">Please select a category</div> \r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                        <div class="form-group">\r\n                            <div class="checkbox-toggle" [ngClass]="{\'has-error\': f.submitted && !has_role.valid}">\r\n                                <label for="active" class="required semibold form-label">Sub category</label>\r\n                                <select class="form-control" name="has_role" [(ngModel)]="user.has_role" #has_role="ngModel" required>\r\n                                    <option disabled [ngValue]="null">Select-Subcategory</option>\r\n                                    <option *ngFor="let user_sub_category of userSubCategory" [ngValue]="user_sub_category.id">{{user_sub_category.name}}</option>\r\n                                </select>\r\n                                <div *ngIf="f.submitted && !has_role.valid" class="help-block">Please select a sub category</div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class="col-md-12 align-middle">\r\n                <div class="form-group">\r\n                    <button class="btn btn-primary" style="margin-right: 10px;">Save</button>\r\n                    <a class="btn btn-primary" [routerLink]="[\'/users\']">Cancel</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</section>'},ILEI:function(e,r){e.exports='<header class="section-header">\r\n  <div class="tbl">\r\n    <div class="tbl-row">\r\n      <div class="column1">\r\n        <div class="tbl-cell">\r\n          <h3>Users</h3>\r\n          <ol class="breadcrumb breadcrumb-simple">\r\n            <li><a [routerLink]="[\'/\']">Home</a></li>\r\n            <li><a [routerLink]="[\'//users\']">Users</a></li>\r\n            <li class="active">Edit</li>\r\n          </ol>\r\n        </div>\r\n      </div>\r\n      <div class="column2">\r\n        <div *ngIf="user.profile_image" class="tbl-cell"> \r\n          <img [src]="user.profile_image[0]" alt="Mountains" class="prof_imgs">\r\n          <h6>Profile Image</h6>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</header>\r\n\x3c!-- Main content --\x3e\r\n\r\n<section class="box-typical box-typical-padding">\r\n  <form name="form" (ngSubmit)="f.form.valid && save()" #f="ngForm" enctype="multipart/form-data" novalidate>\r\n    <input type="hidden" name="id" [(ngModel)]="user.id" #id="ngModel">\r\n    <div class="row">\r\n      <div class="col-sm-12">\r\n        <div class="row">\r\n          <div class="col-md-6">\r\n            <div class="form-group" [ngClass]="{ \'has-error\': f.submitted && !firstname.valid}">\r\n              <label for="firstname" class="required semibold form-label">FirstName</label>\r\n              <input type="text" class="form-control" name="firstname" [(ngModel)]="user.firstname" #firstname="ngModel"\r\n                required>\r\n              <div *ngIf="f.submitted && !firstname.valid" class="help-block">FirstName is required</div>\r\n            </div>\r\n          </div> \r\n          <div class="col-sm-6">\r\n            <div class="form-group" [ngClass]="{ \'has-error\': f.submitted && !lastname.valid}">\r\n              <label for="lastname" class="required semibold form-label">LastName</label>\r\n              <input type="text" class="form-control" name="lastname" [(ngModel)]="user.lastname" #lastname="ngModel"\r\n                required>\r\n              <div *ngIf="f.submitted && !lastname.valid" class="help-block">LastName is required</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="row">\r\n          <div class="col-sm-6">\r\n            <div class="form-group" [ngClass]="{ \'has-error\': f.submitted && !email.valid}">\r\n              <label for="email" class="required semibold form-label">Email</label>\r\n              <input type="text" class="form-control" name="email" [(ngModel)]="user.email" #email="ngModel" required>\r\n              <div *ngIf="f.submitted && !email.valid" class="help-block">Email is required</div>\r\n            </div>\r\n          </div> \r\n          <div class="col-sm-6">\r\n            <div class="form-group" >\r\n              <label for="profile_image" class="required semibold form-label">Profile Image</label>\r\n              <input type="file" class="form-control" name="profile_image" #profile_image (change)="selectImage($event)"> \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="row">\r\n          <div class="col-sm-6">\r\n            <div class="form-group" [ngClass]="{\'has-error\': f.submitted && !mobile_no.valid}">\r\n              <label for="mobile_no" class="required semibold form-label">Mobile</label>\r\n              <input type="text" class="form-control" name="mobile_no" [(ngModel)]="user.mobile_no" #mobile_no="ngModel"\r\n                required>\r\n              <div *ngIf="f.submitted && !mobile_no.valid" class="help-block">Please Enter a Mobile Number</div>\r\n            </div>\r\n          </div>  \r\n          <div class="col-md-3">\r\n            <div class="form-group">\r\n              <div class="checkbox-toggle">\r\n                <label for="active" class="semibold form-label">Active</label>\r\n                <input type="checkbox" id="check-toggle-active" name="active" [(ngModel)]="user.active">\r\n                <label for="check-toggle-active"></label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="row">\r\n          <div class="col-md-6">\r\n              <div class="form-group" [ngClass]="{\'has-error\': f.submitted && !user_type.valid}"> \r\n                  <label for="active" class="required semibold form-label">Category</label>\r\n                  <select class="form-control" name="user_type" [(ngModel)]="user.user_type" #user_type="ngModel" required (change)="onChangeCategory($event.target.value)">\r\n                      <option disabled [ngValue]="null">Select-Category</option>\r\n                      <option *ngFor="let user_category of userCategory" [ngValue]="user_category.user_type">{{user_category.category}}</option>\r\n                  </select>\r\n                  <div *ngIf="f.submitted && !user_type.valid" class="help-block">Please select a category</div> \r\n              </div>\r\n          </div>\r\n          <div class="col-md-6">\r\n              <div class="form-group">\r\n                  <div class="checkbox-toggle" [ngClass]="{\'has-error\': f.submitted && !has_role.valid}">\r\n                      <label for="active" class="required semibold form-label">Sub category</label>\r\n                      <select class="form-control" name="has_role" [(ngModel)]="user.has_role" #has_role="ngModel" required>\r\n                          <option disabled [ngValue]="null">Select-Subcategory</option>\r\n                          <option *ngFor="let user_sub_category of userSubCategory" [ngValue]="user_sub_category.id" [selected]="user_sub_category.id === has_role">{{user_sub_category.name}}</option>\r\n                      </select>\r\n                      <div *ngIf="f.submitted && !has_role.valid" class="help-block">Please select a sub category</div> \r\n                  </div>\r\n              </div>\r\n          </div> \r\n        </div>\r\n        <div class="row">\r\n          <div class="col-md-6">\r\n            <div class="form-group">\r\n                <label for="password" class="required semibold form-label">Password</label>\r\n                <input type="password" class="form-control" name="password" [(ngModel)]="user.password" #password="ngModel"> \r\n            </div>\r\n        </div>\r\n        </div>\r\n        <div class="col-md-12 align-middle">\r\n          <div class="form-group">\r\n            <button class="btn btn-primary" style="margin-right: 10px;">Save</button>\r\n            <a class="btn btn-primary" [routerLink]="[\'/users\']">Cancel</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</section>'},PO3U:function(e,r,s){"use strict";s.r(r);var t=s("mrSG"),n=s("CcnG"),a=s("Ip0R"),i=s("gIcY"),l=s("ZYCi"),o=s("t/Na"),c=s("F/XL"),d=s("xMyE"),u=s("9Z1F"),p=s("AytR"),m=s("3AtW"),b=function(){function e(e,r){this.http=e,this.alertService=r,this.requestUrl=p.a.requestUrl+"/admin/user",this.httpOptions={headers:new o.d({"content-Type":"application/json;charset=UTF-8"})}}return e.prototype.getUsers=function(){var e=this;return this.http.get(this.requestUrl+"/all").pipe(Object(d.a)((function(r){e.handleResponse(r)})),Object(u.a)(this.handleError("User")))},e.prototype.getUser=function(e){var r=this;return this.http.get(this.requestUrl+"/"+e,this.httpOptions).pipe(Object(d.a)((function(e){r.handleResponse(e)})),Object(u.a)(this.handleError("User")))},e.prototype.getUserView=function(e){var r=this;return this.http.get(this.requestUrl+"/"+e,this.httpOptions).pipe(Object(d.a)((function(e){r.handleResponse(e)})),Object(u.a)(this.handleError("User")))},e.prototype.changeStatus=function(e,r,s){var t=this;return this.http.post(this.requestUrl+"/status",{status:e,user_id:r,key:s},this.httpOptions).pipe(Object(d.a)((function(e){t.handleResponse(e)})),Object(u.a)(this.handleError("User")))},e.prototype.changeContactListPermission=function(e,r,s){var t=this;return this.http.post(this.requestUrl+"/contact_list_permission",{status:e,user_id:r,key:s},this.httpOptions).pipe(Object(d.a)((function(e){t.handleResponse(e)})),Object(u.a)(this.handleError("User")))},e.prototype.saveUser=function(e){var r=this;return this.http.post(this.requestUrl+"/save_user",e).pipe(Object(d.a)((function(e){r.handleResponse(e)})),Object(u.a)(this.handleError("User")))},e.prototype.searchLoan=function(e){var r=this,s=e.name,t=e.email,n=e.mobile_no,a=e.user_type,i=e.user_role,l=e.user_status;return this.http.get(this.requestUrl+"/search/users?name="+s+"&email="+t+"&mobile_no="+n+"&user_type="+a+"&user_role="+i+"&user_status="+l).pipe(Object(d.a)((function(e){r.handleResponse(e)})),Object(u.a)(this.handleError("User")))},e.prototype.deleteUser=function(e){var r=this;return this.http.post(this.requestUrl+"/delete",{user_id:e},this.httpOptions).pipe(Object(d.a)((function(e){r.handleResponse(e)})),Object(u.a)(this.handleError("User")))},e.prototype.getUserCategory=function(){var e=this;return this.http.get(p.a.requestUrl+"/api/category/all").pipe(Object(d.a)((function(r){e.handleResponse(r)})),Object(u.a)(this.handleError("User")))},e.prototype.getAllUserSubCategory=function(){var e=this;return this.http.get(p.a.requestUrl+"/api/subcategory/all").pipe(Object(d.a)((function(r){e.handleResponse(r)})),Object(u.a)(this.handleError("User")))},e.prototype.getUserSubCategory=function(e){var r=this;return this.http.get(p.a.requestUrl+"/api/allSubCategory/"+e,this.httpOptions).pipe(Object(d.a)((function(e){r.handleResponse(e)})),Object(u.a)(this.handleError("User")))},e.prototype.getUserRole=function(){var e=this;return this.http.get(p.a.requestUrl+"/api/get_roles/",this.httpOptions).pipe(Object(d.a)((function(r){e.handleResponse(r)})),Object(u.a)(this.handleError("User")))},e.prototype.handleResponse=function(e){return e.error?this.alertService.warn("Failed: "+e.message):this.alertService.success("Success:"+e.message),e},e.prototype.handleError=function(e,r){var s=this;return void 0===e&&(e="operation"),function(t){return s.alertService.error(e+" failed: "+t.message),Object(c.a)(r)}},e.ctorParameters=function(){return[{type:o.b},{type:m.a}]},e=t.b([Object(n.C)()],e)}(),v=s("SZbH"),g=s("ZYjt"),f=function(){function e(e,r,s,t){this.router=e,this.userService=r,this.toastr=s,this.titleService=t,this.titleService.setTitle("Add Users")}return e.prototype.ngOnInit=function(){var e=this;this.user={id:null,firstname:"",lastname:"",email:"",mobile_no:"",password:"",repeatPassword:"",reset_password_token:"",profile_image:"",user_type:null,has_role:null,active:null,message:"",data:this.user,length:""},this.userService.getUserCategory().subscribe((function(r){r&&(e.userCategory=r.data)}))},e.prototype.onChangeCategory=function(e){var r=this;e?this.userService.getUserSubCategory(e).subscribe((function(e){r.userSubCategory=e.data})):this.userSubCategory=null},e.prototype.selectImage=function(e){if(e.target.files.length>0){var r=e.target.files[0];this.profile_image=r}},e.prototype.save=function(e){var r=this,s=new FormData;s.append("firstname",e.firstname),s.append("lastname",e.lastname),s.append("email",e.email),s.append("password",e.password),s.append("mobile_no",e.mobile_no),s.append("profile_image",this.profile_image),s.append("user_type",e.user_type),s.append("has_role",e.has_role),s.append("active",!0===e.active?"1":"0"),this.userService.saveUser(s).subscribe((function(e){r.router.navigate(["/users"]),r.toastr.success(e.message,"Success")}),(function(e){console.log(e)}))},e.ctorParameters=function(){return[{type:l.f},{type:b},{type:v.b},{type:g.c}]},e=t.b([Object(n.n)({selector:"add-user",template:s("1NfT")})],e)}(),h=function(){function e(e,r,s,t,n){this.route=e,this.router=r,this.userService=s,this.toastr=t,this.titleService=n,this.searchUsers={name:"",mobile_no:"",email:"",user_type:"",user_role:"",active_user:""},this.userStatus=[{id:0,name:"In-Active"},{id:1,name:"Active"}],this.titleService.setTitle("List Users")}return e.prototype.ngOnInit=function(){var e=this,r=this.route.snapshot.data.users;r&&(this.users=r.data),this.userService.getUserCategory().subscribe((function(r){r&&(e.userCategory=r.data)})),this.userService.getUserRole().subscribe((function(r){e.userSubCategory=r.data})),$((function(){$("#lisusers").DataTable({responsive:!0,order:[]})}))},e.prototype.changeStatus=function(e,r){var s=this,t=!!e[r];this.userService.changeStatus(t,e.id,r).subscribe((function(e){s.toastr.success(e.message,"Success")}))},e.prototype.changeContactList=function(e,r){var s=this,t=!!e[r];console.log("UserID",e.id),console.log("KEY",r),console.log("Status",t),this.userService.changeContactListPermission(t,e.id,r).subscribe((function(e){s.toastr.success(e.message,"Success")}))},e.prototype.deleteUser=function(e){var r=this,s=[];confirm("Do you really want to delete this user")&&this.userService.deleteUser(e).subscribe((function(t){t.error||(s=r.users,r.users=s.filter((function(r){return r.id!==e})),r.router.navigate(["/users"]),r.toastr.success(t.message,"Success"))}))},e.prototype.search=function(e){var r=this;this.userService.searchLoan(e).subscribe((function(e){(void 0===e||e.data.length<1)&&r.toastr.error("Record not found.","Error"),e.data&&(r.users=e.data)}),(function(e){console.log(e)}))},e.prototype.reset=function(){var e=this.router.url;this.router.routeReuseStrategy.shouldReuseRoute=function(){return!1},this.router.onSameUrlNavigation="reload",this.router.navigate([e])},e.ctorParameters=function(){return[{type:l.a},{type:l.f},{type:b},{type:v.b},{type:g.c}]},e=t.b([Object(n.n)({selector:"list-user",template:s("/mq6")})],e)}(),y=function(){function e(e,r,s,t,n){this.router=e,this.route=r,this.userService=s,this.toastr=t,this.titleService=n,this.titleService.setTitle("Edit Users")}return e.prototype.ngOnInit=function(){var e=this,r=this.route.snapshot.data.user;r&&(this.user=r.data[0],this.has_role=parseInt(this.user.has_role)),this.userService.getUserCategory().subscribe((function(r){r&&(e.userCategory=r.data)})),this.userService.getUserSubCategory(this.user.user_type).subscribe((function(r){r&&(e.userSubCategory=r.data)}))},e.prototype.selectImage=function(e){if(e.target.files.length>0){var r=e.target.files[0];this.profile_image=r}},e.prototype.onChangeCategory=function(e){var r=this;e?this.userService.getUserSubCategory(e).subscribe((function(e){r.userSubCategory=e.data})):this.userSubCategory=null},e.prototype.save=function(){var e=this,r=this.user,s=new FormData;s.append("id",r.id),s.append("firstname",r.firstname),s.append("lastname",r.lastname),s.append("email",r.email),s.append("password",r.password),s.append("mobile_no",r.mobile_no),s.append("profile_image",this.profile_image),s.append("user_type",r.user_type),s.append("has_role",r.has_role),s.append("active",!0===r.active?"1":"0"),this.userService.saveUser(s).subscribe((function(r){e.toastr.success(r.message,"Success"),e.router.navigate(["/users"])}),(function(e){console.log(e)}))},e.ctorParameters=function(){return[{type:l.f},{type:l.a},{type:b},{type:v.b},{type:g.c}]},e=t.b([Object(n.n)({selector:"edit-user",template:s("ILEI")})],e)}(),_=function(){function e(e,r,s){this.route=e,this.userService=r,this.titleService=s,this.titleService.setTitle("View Users")}return e.prototype.ngOnInit=function(){var e=this;this.user=this.route.snapshot.data.user.data[0],this.userService.getUserCategory().subscribe((function(r){r&&(e.userCategory=r.data)})),this.userService.getAllUserSubCategory().subscribe((function(r){r&&(e.userSubCategory=r.data)}))},e.ctorParameters=function(){return[{type:l.a},{type:b},{type:g.c}]},e=t.b([Object(n.n)({selector:"view-user",template:s("XaCR")})],e)}(),S=s("eg8S"),U=function(){function e(e){this.userService=e}return e.prototype.resolve=function(){return this.userService.getUsers()},e.ctorParameters=function(){return[{type:b}]},e=t.b([Object(n.C)()],e)}(),C=function(){function e(e){this.userService=e}return e.prototype.resolve=function(e){return this.userService.getUser(e.paramMap.get("user_id"))},e.ctorParameters=function(){return[{type:b}]},e=t.b([Object(n.C)()],e)}(),w=function(){function e(e){this.userService=e}return e.prototype.resolve=function(e){return this.userService.getUserView(e.paramMap.get("user_id"))},e.ctorParameters=function(){return[{type:b}]},e=t.b([Object(n.C)()],e)}(),x=[{path:"",component:h,resolve:{users:U}},{path:"edit/:user_id",component:y,resolve:{user:C}},{path:"add",component:f},{path:"view/:user_id",component:_,resolve:{user:w}}],M=function(){function e(){}return e=t.b([Object(n.K)({imports:[l.g.forChild(x)],exports:[l.g]})],e)}();s.d(r,"UserModule",(function(){return k}));var k=function(){function e(){}return e=t.b([Object(n.K)({imports:[a.b,i.a,M],providers:[b,S.a,U,C,w],declarations:[h,y,f,_]})],e)}()},XaCR:function(e,r){e.exports='<header class="section-header">\r\n  <div class="tbl">\r\n    <div class="tbl-row">\r\n      <div class="column1">\r\n        <div class="tbl-cell">\r\n          <h3>User Details</h3>\r\n          <ol class="breadcrumb breadcrumb-simple">\r\n            <li><a [routerLink]="[\'/\']">Home</a></li>\r\n            <li><a [routerLink]="[\'//users\']">Users</a></li>\r\n            <li class="active">User Details</li>\r\n          </ol>\r\n        </div>\r\n      </div>\r\n      <div class="column2">\r\n        <div *ngIf="user.profile_image" class="tbl-cell"> \r\n          <img [src]="user.profile_image[0]" alt="Mountains" class="prof_imgs">\r\n          <h6>Profile Image</h6>\r\n        </div>\r\n      </div> \r\n    </div>\r\n  </div>\r\n</header>\r\n\x3c!-- Main content --\x3e\r\n<section class="box-typical box-typical-padding"> \r\n  <div class="row">\r\n    <div class="col-lg-6">\r\n      <fieldset class="form-group">\r\n        <label class="semibold form-label" for="firstname">First Name </label>\r\n        <span class="form-control maxlength-simple">{{ user.firstname }}</span>\r\n      </fieldset>\r\n    </div>\r\n    <div class="col-lg-6">\r\n      <fieldset class="form-group">\r\n        <label class="semibold form-label" for="lastname">Last Name </label>\r\n        <span class="form-control maxlength-simple">{{ user.lastname }}</span>\r\n      </fieldset>\r\n    </div> \r\n  </div>\r\n  <div class="row">\r\n    <div class="col-lg-6">\r\n      <fieldset class="form-group">\r\n        <label class="semibold form-label" for="email">Email </label>\r\n        <span class="form-control maxlength-simple">{{ user.email }}</span>\r\n      </fieldset>\r\n    </div>\r\n    <div class="col-lg-6">\r\n      <fieldset class="form-group">\r\n        <label class="semibold form-label" for="firstname">Mobile Number </label>\r\n        <span class="form-control maxlength-simple">{{ user.mobile_no }}</span>\r\n      </fieldset>\r\n    </div> \r\n  </div>\r\n  <div class="row">\r\n    <div class="col-lg-4">\r\n      <fieldset class="form-group">\r\n        <label class="semibold form-label" for="firstname">Status </label>\r\n        <span class="form-control maxlength-simple">{{ user.active == false ?"Inactive": "Active" }}</span>\r\n      </fieldset>\r\n    </div> \r\n    \x3c!-- <div class="col-lg-4">\r\n      <fieldset class="form-group">\r\n        <label class="semibold form-label" for="email">Category </label>\r\n        <span class="form-control maxlength-simple" *ngFor="let user_category of userCategory" >{{ user.user_type == 0 ? "Admin": "User" }}</span>\r\n      </fieldset>\r\n    </div> --\x3e\r\n    <div class="col-lg-4"> \r\n      <label class="semibold form-label" for="category">Category</label>\r\n      <select class="form-control" disabled> \r\n        <option *ngFor="let user_category of userCategory" [selected]="user_category.user_type==user.user_type">{{user_category.category}}</option>\r\n      </select> \r\n    </div>\r\n    <div class="col-lg-4"> \r\n      <label class="semibold form-label" for="category">Sub Category</label>\r\n      <select class="form-control" disabled> \r\n        <option *ngFor="let user_sub_category of userSubCategory" [selected]="user_sub_category.id == user.has_role">{{user_sub_category.name}}</option>\r\n      </select> \r\n    </div>\r\n  </div> \r\n</section>'}}]);