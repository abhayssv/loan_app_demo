(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{"dX/M":function(t,e,i){"use strict";i.r(e);var r=i("mrSG"),s=i("8Y7J"),n=i("SVse"),o=i("s7LF"),a=i("iInd"),c=i("IheW"),l=i("LRne"),d=i("vkgz"),p=i("JIr8"),h=i("AytR"),u=i("3AtW");let b=class{constructor(t,e){this.http=t,this.alertService=e,this.requestUrl=h.a.requestUrl+"/api/user/fcm",this.httpOptions={headers:new c.d({"content-Type":"application/json;charset=UTF-8"})}}sendNotification(t){return this.http.post(this.requestUrl+"/send_notification",t).pipe(Object(d.a)(t=>{this.handleResponse(t)}),Object(p.a)(this.handleError("EmailSetting")))}handleResponse(t){return t.error?this.alertService.warn("Failed: "+t.message):this.alertService.success("Success:"+t.message),t}handleError(t="operation",e){return i=>(this.alertService.error(`${t} failed: ${i.message}`),Object(l.a)(e))}};b.ctorParameters=()=>[{type:c.b},{type:u.a}],b=r.a([Object(s.C)()],b);var m=i("EApP");let f=class{constructor(t,e,i){this.pushNotificationService=t,this.route=e,this.toastr=i,this.notification={title:"",body:""}}ngOnInit(){}sendNotification(t){t.valid&&this.pushNotificationService.sendNotification(this.notification).subscribe(t=>{t.error?this.toastr.error(t.message,"Failed"):this.toastr.success(t.message,"Success")})}};f.ctorParameters=()=>[{type:b},{type:a.a},{type:m.b}],f=r.a([Object(s.n)({selector:"pushnotification",template:i("yoAQ"),styles:[i("zXQF")]})],f);const v=[{path:"",component:f}];let g=class{};g=r.a([Object(s.K)({imports:[a.g.forChild(v)],exports:[a.g]})],g),i.d(e,"PushNotificationModule",(function(){return y}));let y=class{};y=r.a([Object(s.K)({imports:[n.b,o.a,g],providers:[b],declarations:[f]})],y)},yoAQ:function(t,e){t.exports='<header class="section-header">\r\n  <div class="tbl">\r\n    <div class="tbl-row">\r\n      <div class="tbl-cell">\r\n        <h3>Send Notification</h3>\r\n        <ol class="breadcrumb breadcrumb-simple">\r\n          <li><a [routerLink]="[\'/\']">Home</a></li>\r\n          <li class="active">Send Notification</li>\r\n        </ol> \r\n      </div>\r\n    </div>\r\n  </div>\r\n</header>\r\n<section class="box-typical box-typical-padding min-ht">\r\n<div class="card">  \r\n  <div class="card-body">\r\n  <form #f="ngForm">\r\n  <div class="form-group" [ngClass]="{ \'has-error\': f.submitted && !title.valid}">\r\n      <label for="title" class="required semibold form-label">Title</label>\r\n      <input type="text" class="form-control" name="title" [(ngModel)]="notification.title" #title="ngModel" required maxlength="40">\r\n      <div *ngIf="f.submitted && !title.valid" class="help-block" >Title is required</div>\r\n  </div>\r\n  <div>\r\n    <div class="form-group" [ngClass]="{ \'has-error\': f.submitted && !description.valid}">\r\n        <label for="description" class="required semibold form-label">Description</label>\r\n        <textarea type="text" class="form-control" row="3" name="description" [(ngModel)]="notification.body" #description="ngModel" required maxlength="60"></textarea>\r\n        <div *ngIf="f.submitted && !description.valid" class="help-block">Description is required</div>\r\n    </div>\r\n  </div>\r\n  <div class="mb-3 d-grid gap-2 d-md-flex justify-content-md-end">\r\n     <button class="btn btn-primary" (click)= "sendNotification(f)">Submit</button>\r\n  </div>\r\n</form>\r\n</div>\r\n</div>\r\n</section>\r\n'},zXQF:function(t,e){t.exports=".min-ht {\r\n  height: 350px;\r\n}\r\n.card{\r\n  width: 1000px;\r\n}"}}]);